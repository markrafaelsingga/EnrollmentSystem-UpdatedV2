<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>